[["index.html", "Dasar Pemrograman R Chapter 1 Dasar - dasar Pemrograman R", " Dasar Pemrograman R dimas 2021-01-02 Chapter 1 Dasar - dasar Pemrograman R "],["pengantar-r.html", "Chapter 2 Pengantar R 2.1 Pendefinisian Objek 2.2 Paket (Package)", " Chapter 2 Pengantar R R adalah salah satu bahasa pemrograman yang khusus dirancang dalam menggunakan metode-metode statistika. Program R memberikan banyak kemudahan bagi pemula yang ingin memulai belajar pemrograman. Walaupun program R adalah open source, namun dengan library yang sangat lengkap membuat program R menjadi mampu digunakan untuk mengolah data dengan motode yang lengkap. 2.1 Pendefinisian Objek Objek merupakan sebuah wadah untuk menyimpan informasi yang telah didefinisikan oleh pengguna R. Penyimpanan informasi ke dalam sebuah objek memberikan kemudahan bagi pengguna R untuk memanggil informasi yang sama berulang kali hanya dengan memanggil objeknya saja. Seringkali sebuah informasi memiliki banyak komponen, sehingga jika harus memanggilnya berulang kali akan menjadi sangat tidak efektif. Sehingga dengan mendefinisikannya ke dalam sebuah objek akan mempercepat proses pengerjaannya. Terdapat beberapa cara dalam mendefinisikan objek pada R seperti yang tersajikan pada tabel berikut: Table 2.1: Operator Pendefinisian Objek pada R Operator Operasi &lt;-, &lt;&lt;-, = Mendefinisikan objek sebelah kiri -&gt;, -&gt;&gt; Mendefinisikan objek sebelah kanan Contoh penggunaannya adalah sebagai berikut: x &lt;- 4 y &lt;- c(1, 4, 6, 8, 5) z &lt;- c(&quot;Indonesia&quot;, &quot;Raya&quot;) x ## [1] 4 y ## [1] 1 4 6 8 5 z ## [1] &quot;Indonesia&quot; &quot;Raya&quot; 2.2 Paket (Package) "],["datatype.html", "Chapter 3 Tipe Data 3.1 Numerik (Numeric) 3.2 Bilangan Bulat (Integer) 3.3 Bilangan Kompleks (Complex) 3.4 Logika (Logical) 3.5 Teks (Character) 3.6 Faktor (Factor)", " Chapter 3 Tipe Data Terdapat 5 tipe data pada bahasa pemrograman R. Setiap tipe data tersebut memiliki karakteristik sendiri sehingga tidak terjadi tumpang tindih dalam melakukan berbagai macam pengoperasiannya. Berikut adalah 6 tipe data pada bahasa pemrograman R: 3.1 Numerik (Numeric) Tipe data numerik adalah tipe data yang berupa nilai/angka desimal. Tipe data ini merupakan tipe data yang dapat digunakan untuk melakukan operasi-operasi aritmatika seperti penjumlahan, pengurangan, perkailan, dsb. Jika kita definisikan objek x dengan suatu nilai/angka, maka tipe objek tersbut adalah numeric. x &lt;- 2.6 class(x) ## [1] &quot;numeric&quot; Bahkan R akan mendefinisikan objek dengan tipe numeric jika berikan angka tanpa desimal. x &lt;- 5 class(x) ## [1] &quot;numeric&quot; 3.2 Bilangan Bulat (Integer) Seperti yang kita tahu bahwa pendefinisian angka pada suatu objek akan secara otomatis membuat objek tersebut bertipe numeric. Sedangkan untuk mendefinisikan objek dengan tipe integer harus mendefinisikan secara khusus objek tersebut dengan perintah as.integer. x &lt;- as.integer(5) class(x) ## [1] &quot;integer&quot; Selain itu kita dapat mendefinisikan sebuah objek yang bertipe integer dengan menambahkan huruf L kapital pada akhir angka. x &lt;- 3L class(x) ## [1] &quot;integer&quot; Bagaimana jika kita berikan angka desimal pada objek yang kita definisikan sebagai integer? x &lt;- as.integer(3.76) 3.3 Bilangan Kompleks (Complex) Bilangan kompleks dalam matematika adalah bilangan yang didefinisikan dengan \\(a + bi\\), dengan \\(a\\) dan \\(b\\) adalah bilangan real. Sedangkan \\(i\\) adalah bilangan imajiner dan menyebabkan \\(bi\\) menjadi imajiner. Bilangan imajiner sendiri memiliki sifat \\(i^{2}=1\\). Kita harus secara langsung mendefinisikan objek sebagai bilangan kompleks agar mendapatkan sebuah objek yang bertipe complex. x &lt;- 2 + 4i class(x) ## [1] &quot;complex&quot; 3.4 Logika (Logical) Objek dengan tipe logika adalah objek yang hanya memiliki 2 nilai saja yaitu TRUE dan FALSE. x &lt;- TRUE class(x) ## [1] &quot;logical&quot; 3.5 Teks (Character) Pendefinisian objek dengan tipe teks (character) merupakan hal yang cukup mudah. Kita perlu menambahkan tanda petik \" pada awal dan akhir teks. Setelah itu objek akan terdefinisikan sebagai character. x &lt;- &quot;Aplikasi Komputer&quot; class(x) ## [1] &quot;character&quot; x ## [1] &quot;Aplikasi Komputer&quot; Apakah tipe data dari objek yang didefinisikan dengan nilai \"2.4\"? 3.6 Faktor (Factor) Faktor adalah tipe data pada bahasa pemrograman R yang digunakan untuk mendefinisikan sebuah objek menjadi sebuah objek dengan tipe data kategorik. Perintah yang digunakan untuk merubah sebuah objek menjadi sebuah faktor adalah factor(). x &lt;- factor(c(1, 2, 3)) y &lt;- factor(c(&quot;SD&quot;, &quot;SMP&quot;, &quot;SMA&quot;, &quot;SMA&quot;, &quot;PT&quot;)) x ## [1] 1 2 3 ## Levels: 1 2 3 y ## [1] SD SMP SMA SMA PT ## Levels: PT SD SMA SMP Sebuah objek yang telah didefinisikan sebagaik faktor akan memiliki levels yang merupakan daftar kategori yang terdapat pada objek tersebut. Kita dapat menggunakan perintah levels untuk dapat memunculkan levels nya saja. levels(x) ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; levels(y) ## [1] &quot;PT&quot; &quot;SD&quot; &quot;SMA&quot; &quot;SMP&quot; Apa perbedaan output dari objek yang bertipe factor dengan objek yang bertipe numeric? Apa perbedaan output dari objek yang bertipe factor dengan objek yang bertipe character? "],["struktur-data.html", "Chapter 4 Struktur Data 4.1 Vektor (Vector) 4.2 Matriks (Matrix) 4.3 Daftar (List) 4.4 Kerangka Data (Data Frame)", " Chapter 4 Struktur Data Struktur data pada bahasa pemrograman R adalah sebuah konsep yang digunakan untuk menyimpan data berdasarkan kebutuhannya. Berdasarkan struktur datanya, terdapat 4 struktur data yang dapat kita definisikan pada program R: Vektor (vector) Matriks (matrix) Pendafaran (list) Kerangka Data (data.frame) 4.1 Vektor (Vector) Vektor adalah struktur data yang paling sederhana pada bahasa pemrograman R. Vektor memuat barisan data dengan tipe data yang sama. Pendefinisian vektor dilakukan dengan menggunakan perintah c(). Semua data ditulis didalam tanda kurung dan setiap data dipisahkan dengan tanda koma ,. x &lt;- c(1:5) x ## [1] 1 2 3 4 5 y &lt;- c(&quot;Hipertensi&quot;, &quot;Diabetes&quot;, &quot;Asam Urat&quot;) y ## [1] &quot;Hipertensi&quot; &quot;Diabetes&quot; &quot;Asam Urat&quot; length(x) ## [1] 5 length(y) ## [1] 3 Apa yang terjadi apabila sebuah vektor diisi dengan 2 tipe data? misalnya c(12, 4, TRUE) Selanjutnya kita dapat memanggil anggota dari sebuah objek vector dengan menggunakan tanda [x] setelah objek dengan x adalah nilai yang menyatakan data ke-x. x[2] ## [1] 2 y[3] ## [1] &quot;Asam Urat&quot; 4.2 Matriks (Matrix) Sama halnya dengan vektor, matriks merupakan struktur data yang hanya dapat menyimpan 1 tipe data saja. Perbedaan antara struktur data matrix dengan vector berada pada dimensi datanya. Vektor merupakan struktur data berdimensi 1 (hanya memiliki panjang data). Sedangkan matriks adalah struktur data yang berdimensi 2 (memiliki dimensi dan panjang data). Pendefinisian matriks dilakukan dengan menggunakan perintah matrix dengan syntax: matrix(data, nrow, ncol, byrow=FALSE). x &lt;- matrix( c(1:8), 2, 4 ) x ## [,1] [,2] [,3] [,4] ## [1,] 1 3 5 7 ## [2,] 2 4 6 8 dim(x) ## [1] 2 4 dengan: data adalah data yang akan kita gunakan nrow adalah jumlah baris ncol adalah jumlah kolom byrow adalah perintah opsional untuk memilih agar data yang kita miliki didaftarkan berdasarkan baris atau kolom Apakah yang akan terjadi apabila kita menggunakan byrow=FALSE dan byrow=TRUE? Berbeda dengan objek yang berupa vector, pemanggilan data pada objek matrix menggunakan tanda [x,y] dimana x adalah data baris ke-x dan y adalah data kolom ke-y. Apabila kita menggunakan tanda [x,] saja, maka kita memanggil semua data pada baris ke-x. Sedangkan apabila kita menggunakan tanda [,y] saja, maka kita memanggil semua data pada kolom ke-y. x[2,3] ## [1] 6 x[2,] ## [1] 2 4 6 8 x[,4] ## [1] 7 8 x[6] ## [1] 6 Catatan: x dan y pada [x,y] dapat berupa vector. 4.3 Daftar (List) Struktur data list dalam R adalah struktur data yang dapat mendaftarkan beberapa objek sekaligus tanpa perlu khawatir dengan tipe data yang berbeda. Struktur data list dapat juga dikatakan sebagai vektor yang dapat menyimpan berbagai macam objek. Pendefinisian list dilakukan dengan menggunakan perintah list(). a &lt;- c(1, 3, 6, 2) b &lt;- c(&quot;Apa&quot;, &quot;kabar&quot;, &quot;anda&quot;, &quot;hari&quot;, &quot;ini&quot;, &quot;?&quot;) c &lt;- c(TRUE, FALSE, FALSE, FALSE, TRUE) x &lt;- list(a=a, b=b, c=c) x ## $a ## [1] 1 3 6 2 ## ## $b ## [1] &quot;Apa&quot; &quot;kabar&quot; &quot;anda&quot; &quot;hari&quot; &quot;ini&quot; &quot;?&quot; ## ## $c ## [1] TRUE FALSE FALSE FALSE TRUE Selanjutnya kita dapat memanggil masing-masing objek pada sebuah list dengan syntax: ListObject$ObjekInList atau dengan menggunakan [[x]] dimana x adalah sebuah angka yang merujuk pada daftar ke berapa. x$a ## [1] 1 3 6 2 x[[3]] ## [1] TRUE FALSE FALSE FALSE TRUE 4.4 Kerangka Data (Data Frame) Struktur data yang berupa data frame (data.frame) merupakan struktur data yang akan paling sering kita gunakan dalam pengolahan data. Struktur data ini digunakan untuk mendefinisikan sebuah tabel data yang mana setiap kolom adalah nama-nama objek/variabel pada data frame tersebut. Setiap objek/variabel dalam data.frame merupakan sebuah vector. Artinya setiap objek/variabel dalam data.frame hanya dapat memiliki 1 tipe data saja. Selain itu setiap objek/variabel yang berada dalam data.frame harus memiliki jumlah data (length()) yang sama. Perintah data.frame() adalah perintah yang digunakan untuk medefinisikan sebuah objek sebagai sebuah data frame. nama &lt;- c(&quot;Ahmad&quot;, &quot;Ganjar&quot;, &quot;Lusi&quot;, &quot;Andina&quot;, &quot;Elok&quot;) jk &lt;- factor(c(&quot;Laki-laki&quot;, &quot;Laki-laki&quot;, &quot;Perempuan&quot;, &quot;Perempuan&quot;, &quot;Perempuan&quot;)) tb &lt;- c(170, 169, 160, 154, 163) bb &lt;- c(70, 67, 45, 40, 52) x &lt;- data.frame(nama, jk, tb, bb) x ## nama jk tb bb ## 1 Ahmad Laki-laki 170 70 ## 2 Ganjar Laki-laki 169 67 ## 3 Lusi Perempuan 160 45 ## 4 Andina Perempuan 154 40 ## 5 Elok Perempuan 163 52 Table 4.1: Data Mahasiswa 2020 nama jk tb bb Ahmad Laki-laki 170 70 Ganjar Laki-laki 169 67 Lusi Perempuan 160 45 Andina Perempuan 154 40 Elok Perempuan 163 52 Selanjutnya untuk memanggil objek/variabel pada sebuah data.frame mirip dengan memanggil data pada sebuah matrix. Selain itu kita dapat pula memanggil dengan cara menyebutkan nama objek/variabel pada data.frame tersebut. x[,2] ## [1] Laki-laki Laki-laki Perempuan Perempuan Perempuan ## Levels: Laki-laki Perempuan x[4,] ## nama jk tb bb ## 4 Andina Perempuan 154 40 x$nama ## [1] &quot;Ahmad&quot; &quot;Ganjar&quot; &quot;Lusi&quot; &quot;Andina&quot; &quot;Elok&quot; x[,c(&#39;jk&#39;, &#39;nama&#39;)] ## jk nama ## 1 Laki-laki Ahmad ## 2 Laki-laki Ganjar ## 3 Perempuan Lusi ## 4 Perempuan Andina ## 5 Perempuan Elok "],["operator-operator-pada-r.html", "Chapter 5 Operator - operator pada R 5.1 Operator Aritmatika 5.2 Operator Logika 5.3 Operator Relasi", " Chapter 5 Operator - operator pada R Operator - operator pada R adalah perintah untuk melakukan suatu operasi seperti operasi artimatika, logika dan relasi. Secara umum terdapat 4 tipe operator pada R, yaitu: Operator Aritmatika Operator Logika Operator Relasi 5.1 Operator Aritmatika Operator artimatika adalah operator yang digunakan untuk melakukan komputasi dengan menggunakan operasi - operasi matematika seperti penjumlahan, pengurangan, dll. Berikut adalah daftar operator aritmatika pada R: Table 5.1: Operator Aritmatika pada R Operator Operasi + Penjumlahan - Pengurangan * Perkalian / Pembagian ^ Perpangkatan %% Modulo Operator umumnya digunakan untuk pengoperasian pada objek bertipe numeric atau integer dengan struktur data berupa vector dan matrix. Berikut adalah contoh penggunaannya: x &lt;- 3 y &lt;- 5 Table 5.2: Hasil Penggunaan Operator pada R Operator Operasi Hasil + x + y 8.0 - x - y -2.0 * x * y 15.0 / x / y 0.6 ^ x ^ y 243.0 %% x %% y 3.0 5.2 Operator Logika Operator logika akan menghasilkan nilai TRUE dan FALSE. Seperti halnya logika matematika, terdapat 2 operator logika yaitu dan (AND), atau (OR) dan ingkaran (NOT). Berikut adalah daftar operator logika pada R: Table 5.3: Operator Logika pada R Operator Operasi ! Bukan/Ingkaran &amp; Logika DAN pada masing-masing anggota objek &amp;&amp; Logika DAN | Logika ATAU || Logika ATAU pada masing-masing anggota objek Berikut adalah contoh hasil penggunaannya: x &lt;- c(TRUE, FALSE, 5) y &lt;- c(TRUE, FALSE, FALSE) z &lt;- c(FALSE, TRUE, TRUE) !x ## [1] FALSE TRUE FALSE x&amp;y ## [1] TRUE FALSE FALSE x&amp;&amp;z ## [1] FALSE x|y ## [1] TRUE FALSE TRUE x||z ## [1] TRUE Table 5.4: Hasil Penggunaan Operator Logika P1 P2 NegasiP1 NegasiP2 DAN ATAU TRUE TRUE FALSE FALSE TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE FALSE TRUE FALSE FALSE TRUE TRUE FALSE FALSE 5.3 Operator Relasi Operator relasi adalah operator yang digunakan untuk membandingkan 2 buah nilai/objek. Hasil output dari operator relasi ini adalah TRUE dan FALSE. Berikut adalah daftar operator relasi: Table 5.5: Operasi Relasi pada R Operator Operasi &lt; Kurang dari &lt;= Kurang dari sama dengan &gt; Lebih dari &gt;= Lebih dari sama dengan == Sama dengan != Tidak sama dengan Operator relasi dapat dioperasikan layaknya operator logika. Berikut adalah contoh penggunaannya: x &lt;- 3 y &lt;- 7 z &lt;- 7 x&lt;y ## [1] TRUE x&gt;y ## [1] FALSE x&lt;=y ## [1] TRUE y&lt;=z ## [1] TRUE x!=y ## [1] TRUE y==z ## [1] TRUE "],["plot-dengan-ggplot2.html", "Chapter 6 Plot dengan ggplot2 6.1 Bar Plot 6.2 Grafik Histogram 6.3 Pie Plot 6.4 Box Plot 6.5 Line Plot 6.6 Scatter Plot 6.7 Area Plot", " Chapter 6 Plot dengan ggplot2 Plot adalah salah satu hal mendasar yang dapat digunakan untuk menggambarkan distribusi data. Program R pun memiliki perintah - perintah untuk membuat sebuah plot. Namun perintah - perintah tersebut masih merupakan perintah yang sederhana. Hasilnya, gambar kurang menarik untuk disajikan pada khalayak umum. ggplot2 merupakan sebuah paket yang dapat digunakan pada program R dengan cara melakukan instalasi terlebih dahulu menggunakan perintah install.package(\"ggplot2\"). Paket ggplot2 memberikan fasilitas bagi penggunanya dalam membuat sebuah plot yang menarik untuk dilihat. Setelah anda memahami jenis-jenis plot beserta cara penggunaannya, kita dapat menggunakan paket ggpubr yang telah disusun khusus untuk kebutuhan publikasi/penerbitan. Setelah instalasi paket ggplot2 selesai, selanjutnya kita dapat memanggil paket tersebut dengan perintah library(ggplot2) 6.1 Bar Plot Grafik batang merupakan grafik yang digunakan untuk menunjukkan frekuensi dari dara. Grafik batang lebih sering digunakan untuk menunjukkan perbedaan jumlah dari data yang bertipe kategorik seperti jenis kelamin, asal daerah, status perniahan, dsb. Selanjutnya kita akan membuat sebuah grafik batang dengan menggunakan data berikut: jpc &lt;- c(34, 25, 69, 40, 30, 32, 45) hr &lt;- c(&quot;Sen&quot;, &quot;Sel&quot;, &quot;Rab&quot;, &quot;Kam&quot;, &quot;Jum&quot;, &quot;Sab&quot;, &quot;Min&quot;) x &lt;- data.frame(Hari = hr, Pasien = jpc) x ## Hari Pasien ## 1 Sen 34 ## 2 Sel 25 ## 3 Rab 69 ## 4 Kam 40 ## 5 Jum 30 ## 6 Sab 32 ## 7 Min 45 Terdapat perintah barplot dalam R yang merupakan perintah yang sudah tersedia saat melakukan instalasi R. Walapun perintah barplot dapat kita gunakan, namun hasil yang diberikan sangat sederhana dan lebih cocok digunakan untuk sebuah laporan. Berikut adalah cara menggunakan perintah barplot: barplot(x$Pasien, names.arg = x$Hari) Selanjutnya kita akan menggunakan paket ggplot2 untuk menyajikan grafik batang yang lebih menarik. Berikut adalah perintah untuk membuat grafik batang dengan menggunakan paket ggplot2: p &lt;- ggplot(x, aes(Hari)) + geom_bar(aes(weight=Pasien, fill=Hari, colour=Hari)) + theme_bw() p penjelasan: ggplot(x, aes(Hari)) adalah perintah untuk membuat sebuah objek ggplot dari variabel Hari pada data x geom_bar(aes(weight=Pasien, fill=Hari, colour=Hari)) geom_bar() adalah perintah untuk membuat grafik batang menggunakan ggplot weight adalah banyak datanya (dalam kasus yang kita kerjakan: banyaknya Pasien setiap hari) fill bertujuan untuk memberi warna batang (harus sama dengan aes(Hari) pada ggplot agar setiap batang memiliki warna yang berbeda) colour bertujuan untuk memberi warna garis (harus sama dengan aes(Hari) pada ggplot agar setiap batang memiliki warna yang berbeda) theme_bw() bertujuan untuk menentukan tema black and white pada grafik 6.2 Grafik Histogram Histogram merupakan grafik batang yang dapat menunjukkan seberapa sering suatu nilai yang berbeda terjadi. Histogram lebih sering digunakan untuk melihat distribusi dari suatu data. Berbeda dengan grafik batang, kita perlu menggunakan data numerik dalam membuat sebuah histogram. Berikut adalah data acak yang dibangkitkan dengan perintah rnorm: data &lt;- data.frame(x = rnorm(100,5,2)) Kita dapat menggunakan perintah hist yang telah tersedia saat melakukan instalasi R. hist(data$x) Selanjutnya kita akan menggunakan perintah yang tersedia pada paket ggplot2. p &lt;- ggplot(data, aes(x)) + geom_histogram(binwidth = 1, color = &quot;white&quot;, fill= &quot;darkred&quot;) + theme_bw() p penjelasan: * ggplot(data, aes(x)) adalah perintah untuk membuat sebuah objek ggplot dari objek x pada data data * geom_histogram(binwidth = 1, color = \"white\", fill= \"darkred\") - geom_histogram() adalah perintah untuk membuat histogram menggunakan ggplot - bandwidth adalah lebar dari masing-masing batang - fill bertujuan untuk memberi warna batang (dalam kasus ini kita akan berikan warna yang sama untuk semua batang) - colour bertujuan untuk memberi warna garis (dalam kasus ini kita akan berikan warna yang sama untuk semua garis) * theme_bw() bertujuan untuk menentukan tema black and white pada plot Selanjutnya bandingkan dengan histogram yang memiliki bandwith berbeda. p &lt;- ggplot(data, aes(x)) + geom_histogram(binwidth = 3, color = &quot;white&quot;, fill= &quot;darkred&quot;) + theme_bw() p 6.3 Pie Plot jumlah &lt;- c(23, 57, 20) label &lt;- c(&quot;Setuju&quot;, &quot;Tidak setuju&quot;, &quot;Tidak tahu&quot;) x &lt;- data.frame(label, jumlah) Menggunakan perintah pie pie(x$jumlah, labels = x$label) Menggunakan paket ggplot2 p &lt;- ggplot(x, aes(x=&quot;&quot;, y=jumlah, fill=label)) + geom_bar(width = 1, stat = &quot;identity&quot;) p + coord_polar(&quot;y&quot;, start = 0) penjelasan: 6.4 Box Plot x &lt;- rnorm(250, 9, 3) y &lt;- rnorm(250, 4, 1) z &lt;- rnorm(250, 11, 6) Menggunakan perintah boxplot boxplot(x, y, z, names = c(&quot;x&quot;, &quot;y&quot;, &quot;z&quot;)) Menggunakan paket ggplot2 data &lt;- data.frame(label = c(rep(c(&quot;x&quot;,&quot;y&quot;,&quot;z&quot;), each=250)), value = c(x, y, z)) head(data) ## label value ## 1 x 10.848714 ## 2 x 5.298692 ## 3 x 3.097458 ## 4 x 7.659209 ## 5 x 4.669671 ## 6 x 9.391018 p &lt;- ggplot(data, aes(x=label, y=value)) + geom_boxplot(outlier.colour = &quot;red&quot;) + theme_bw() p 6.5 Line Plot x &lt;- c(23, 57, 20) names(x) &lt;- c(&quot;Setuju&quot;, &quot;Tidak setuju&quot;, &quot;Tidak tahu&quot;) Menggunakan perintah pie plot(x, type = &quot;o&quot;) Menggunakan paket ggplot2 6.6 Scatter Plot x &lt;- c(23, 57, 20) names(x) &lt;- c(&quot;Setuju&quot;, &quot;Tidak setuju&quot;, &quot;Tidak tahu&quot;) Menggunakan perintah pie pie(x, labels = names(x)) Menggunakan paket ggplot2 6.7 Area Plot x &lt;- c(23, 57, 20) names(x) &lt;- c(&quot;Setuju&quot;, &quot;Tidak setuju&quot;, &quot;Tidak tahu&quot;) Menggunakan perintah pie pie(x, labels = names(x)) Menggunakan paket ggplot2 "],["references.html", "References", " References "]]
